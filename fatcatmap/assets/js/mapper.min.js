var busy,catnip,close,collapse,data,dye,expand,graph,hide,idle,index,load_context,receive,show,toggle,_get,_onload,__slice=[].slice;_get=this._get=function $this$_get$($d$$){if($d$$&&null!=$d$$.querySelector)return $d$$;if("string"===typeof $d$$)return"#"===$d$$[0]?document.getElementById($d$$.replace("#","")):document.querySelectorAll($d$$);console.log("_get was asked to retrieve:",$d$$);throw"invalid _get string";};
catnip=this.catnip={ui:{},data:{},graph:{},context:{},config:{assets:{prefix:"//storage.googleapis.com/providence-clarity/"}},state:{pending:1},events:{onload:[]},el:{map:_get("#appstage"),stage:_get("#appstage"),frame:_get("#appframe"),logon:_get("#logon"),mapper:_get("#mapper"),spinner:_get("#appspinner"),leftbar:_get("#leftbar"),rightbar:_get("#rightbar")}};
show=this.show=this.catnip.ui.show=function $this$catnip$ui$show$($d$$,$hidden_only$$){var $el$$,$element$$,$_i$$,$_len$$,$_results$$;$el$$=_get($d$$);null==$el$$.length&&($el$$=[$el$$]);$_results$$=[];$_i$$=0;for($_len$$=$el$$.length;$_i$$<$_len$$;$_i$$++)$element$$=$el$$[$_i$$],$element$$.classList.remove("hidden"),$hidden_only$$?$_results$$.push(void 0):$_results$$.push($element$$.classList.remove("transparent"));return $_results$$};
hide=this.hide=this.catnip.ui.hide=function $this$catnip$ui$hide$($d$$2_el$$){var $element$$,$_i$$,$_len$$,$_results$$;$d$$2_el$$=_get($d$$2_el$$);null==$d$$2_el$$.length&&($d$$2_el$$=[$d$$2_el$$]);$_results$$=[];$_i$$=0;for($_len$$=$d$$2_el$$.length;$_i$$<$_len$$;$_i$$++)$element$$=$d$$2_el$$[$_i$$],$_results$$.push($element$$.classList.add("transparent"));return $_results$$};
toggle=this.toggle=this.catnip.ui.toggle=function $this$catnip$ui$toggle$($d$$,$klass$$){var $el$$,$element$$,$_i$$,$_len$$,$_results$$;$el$$=_get($d$$);null==$el$$.length&&($el$$=[$el$$]);$_results$$=[];$_i$$=0;for($_len$$=$el$$.length;$_i$$<$_len$$;$_i$$++)$element$$=$el$$[$_i$$],$_results$$.push($element$$.classList.toggle($klass$$||"transparent"));return $_results$$};
dye=this.dye=this.catnip.ui.dye=function $this$catnip$ui$dye$($d$$,$color$$){var $el$$,$element$$,$_i$$,$_len$$,$_results$$;$el$$=_get($d$$);null==$el$$.length&&($el$$=[$el$$]);$_results$$=[];$_i$$=0;for($_len$$=$el$$.length;$_i$$<$_len$$;$_i$$++)$element$$=$el$$[$_i$$],$_results$$.push($element$$.style.setProperty("background-color",$color$$));return $_results$$};busy=this.busy=this.catnip.busy=function($_this$$){return function(){if(0===$_this$$.catnip.state.pending++&&$_this$$.catnip.el.spinner)return $.catnip.ui.show($_this$$.catnip.el.spinner)}}(this);
idle=this.idle=this.catnip.idle=function($_this$$){return function(){if(0===--$_this$$.catnip.state.pending&&$_this$$.catnip.el.spinner)return $.catnip.ui.hide($_this$$.catnip.el.spinner)}}(this);
expand=this.expand=this.catnip.ui.expand=function $this$catnip$ui$expand$($target$$,$state$$){var $add$$,$el$$,$element$$,$remove$$,$_i$$,$_len$$,$_results$$;null==$state$$&&($state$$=!1);$el$$=_get($target$$);null==$el$$.length&&($el$$=[$el$$]);$_results$$=[];$_i$$=0;for($_len$$=$el$$.length;$_i$$<$_len$$;$_i$$++)$element$$=$el$$[$_i$$],$element$$.classList.contains("open-small")?($remove$$="open-small",$state$$||($add$$="open-expanded")):$element$$.classList.contains("open-expanded")?($remove$$=
"open-expanded",$state$$||($add$$="open-fullscreen")):$element$$.classList.contains("collapsed")&&($remove$$="collapsed",$state$$||($add$$="open-small")),$add$$=$add$$||$state$$,$remove$$&&($element$$.classList.remove($remove$$),$element$$.classList.remove("transparent")),$_results$$.push($element$$.classList.add($add$$));return $_results$$};
collapse=this.collapse=this.catnip.ui.collapse=function $this$catnip$ui$collapse$($target$$,$state$$){var $add$$,$el$$,$element$$,$remove$$,$_i$$,$_len$$,$_results$$;null==$state$$&&($state$$=!1);$el$$=_get($target$$);null==$el$$.length&&($el$$=[$el$$]);$_results$$=[];$_i$$=0;for($_len$$=$el$$.length;$_i$$<$_len$$;$_i$$++)$element$$=$el$$[$_i$$],$element$$.classList.contains("open-small")?($remove$$="open-small",$state$$||($add$$="collapsed")):$element$$.classList.contains("open-expanded")?($remove$$=
"open-expanded",$state$$||($add$$="open-small")):$element$$.classList.contains("open-fullscreen")&&($remove$$="open-fullscreen",$state$$||($add$$="open-expanded")),$add$$=$add$$||$state$$,$remove$$&&$element$$.classList.remove($remove$$),$_results$$.push($element$$.classList.add($add$$));return $_results$$};
close=this.close=this.catnip.ui.close=function $this$catnip$ui$close$($el$$7_target$$){var $element$$,$_i$$,$_len$$,$_results$$;$el$$7_target$$=_get($el$$7_target$$);null==$el$$7_target$$.length&&($el$$7_target$$=[$el$$7_target$$]);$_results$$=[];$_i$$=0;for($_len$$=$el$$7_target$$.length;$_i$$<$_len$$;$_i$$++)$element$$=$el$$7_target$$[$_i$$],$element$$.classList.remove("open-small"),$element$$.classList.remove("open-expanded"),$element$$.classList.remove("open-fullscreen"),$element$$.classList.add("collapsed"),
$_results$$.push($element$$.classList.add("transparent"));return $_results$$};"undefined"!==typeof $&&null!==$&&$.extend({catnip:this.catnip});data=this.catnip.data.raw={};index=this.catnip.data.index={adjacency:{},nodes_by_key:{},edges_by_key:{},natives_by_key:{},object_natives:{}};graph=this.catnip.data.graph={nodes:[],edges:[],natives:[]};
receive=this.catnip.data.receive=function($_this$$){return function($data$$){var $key$$,$_key_iter__len1__ref1_key_i$$,$payload$$,$_len$$,$_ref_targets$$,$_i$$,$_k$$,$_len2$$;$payload$$="string"===typeof $data$$?$_this$$.catnip.data.payload=JSON.parse($data$$):$_this$$.catnip.data.payload=$data$$;$_ref_targets$$=$payload$$.data.keys;$_key_iter__len1__ref1_key_i$$=$_i$$=0;for($_len$$=$_ref_targets$$.length;$_i$$<$_len$$;$_key_iter__len1__ref1_key_i$$=++$_i$$)$key$$=$_ref_targets$$[$_key_iter__len1__ref1_key_i$$],
null==$_this$$.catnip.data.raw[$key$$]&&($_this$$.catnip.data.raw[$key$$]=$payload$$.data.objects[$_key_iter__len1__ref1_key_i$$]);$_key_iter__len1__ref1_key_i$$=Array($payload$$.graph.natives);$key$$=$_i$$=0;for($_key_iter__len1__ref1_key_i$$=$_key_iter__len1__ref1_key_i$$.length;$_i$$<$_key_iter__len1__ref1_key_i$$;$key$$=++$_i$$)$key$$=$payload$$.graph.edges+1+$key$$,null==index.natives_by_key[$payload$$.data.keys[$key$$]]&&(index.natives_by_key[$payload$$.data.keys[$key$$]]=graph.natives.push({key:$payload$$.data.keys[$key$$],
data:$data$$[$payload$$.data.keys[$key$$]]})-1);for($_key_iter__len1__ref1_key_i$$=-1;$_key_iter__len1__ref1_key_i$$<$payload$$.data.keys.length;)if($_key_iter__len1__ref1_key_i$$++,$_key_iter__len1__ref1_key_i$$<=$payload$$.graph.nodes)$_i$$=$_this$$.catnip.data.index.nodes_by_key[$payload$$.data.keys[$_key_iter__len1__ref1_key_i$$]]?index.nodes_by_key[$payload$$.data.keys[$_key_iter__len1__ref1_key_i$$]]:index.nodes_by_key[$payload$$.data.keys[$_key_iter__len1__ref1_key_i$$]]=graph.nodes.push({node:{key:$payload$$.data.keys[$_key_iter__len1__ref1_key_i$$],
data:$_this$$.catnip.data.raw[$payload$$.data.keys[$_key_iter__len1__ref1_key_i$$]]},"native":{key:$payload$$.data.objects[$_key_iter__len1__ref1_key_i$$]["native"],data:$_this$$.catnip.data.raw[$payload$$.data.objects[$_key_iter__len1__ref1_key_i$$]["native"]]}})-1;else if($_key_iter__len1__ref1_key_i$$<=$payload$$.graph.edges)for(index.edges_by_key[$payload$$.data.keys[$_key_iter__len1__ref1_key_i$$]]||(index.edges_by_key[$payload$$.data.keys[$_key_iter__len1__ref1_key_i$$]]=[]),$_i$$=$payload$$.data.objects[$_key_iter__len1__ref1_key_i$$].node,
$key$$=$_i$$[0],$_ref_targets$$=2<=$_i$$.length?__slice.call($_i$$,1):[],$_k$$=0,$_len2$$=$_ref_targets$$.length;$_k$$<$_len2$$;$_k$$++)$_len$$=$_ref_targets$$[$_k$$],$_this$$.catnip.data.index.adjacency[$key$$]&&$_this$$.catnip.data.index.adjacency[$key$$][$_len$$]?$_i$$=$_this$$.catnip.data.index.adjacency[$key$$][$_len$$]:($_i$$=graph.edges.push({edge:{key:$payload$$.data.keys[$_key_iter__len1__ref1_key_i$$],data:$data$$[$payload$$.data.keys[$_key_iter__len1__ref1_key_i$$]]},"native":$data$$[$payload$$.data.objects[$_key_iter__len1__ref1_key_i$$]["native"]],
source:{index:index.nodes_by_key[$key$$],object:graph.nodes[index.nodes_by_key[$key$$]]},target:{index:index.nodes_by_key[$_len$$],object:graph.nodes[index.nodes_by_key[$_len$$]]}})-1,index.edges_by_key[$payload$$.data.keys[$_key_iter__len1__ref1_key_i$$]].push($_i$$),null==$_this$$.catnip.data.index.adjacency[$key$$]&&($_this$$.catnip.data.index.adjacency[$key$$]={}),$_this$$.catnip.data.index.adjacency[$key$$][$_len$$]=$_i$$);return setTimeout(function(){return this.catnip.graph.draw(graph)},0)}}(this);
load_context=this.catnip.context.load=function($_this$$){return function($event$$,$data$$){var $_catnip_context_pagedata$$,$_map$$,$_mapper_queue$$,$_show_queue$$;$_show_queue$$=[];$_mapper_queue$$=[];$_catnip_context_pagedata$$=$_this$$.catnip.context.data=$data$$||JSON.parse(document.getElementById("js-context").textContent);console.log("Loading context...",$_catnip_context_pagedata$$);$_this$$.catnip.context.data.services&&(console.log("Loading services...",$_catnip_context_pagedata$$.services),
apptools.rpc.service.factory($_catnip_context_pagedata$$.services));$_this$$.catnip.context.data.pagedata&&($_catnip_context_pagedata$$=$_this$$.pagedata=JSON.parse(document.getElementById("js-data").textContent),console.log("Detected stapled pagedata...",$_catnip_context_pagedata$$),$_this$$.catnip.data.receive($_catnip_context_pagedata$$));$_this$$.catnip.context.data.session&&($_this$$.catnip.context.data.session.established?($_this$$.catnip.session=$_this$$.catnip.context.data.session.payload,
console.log("Loading existing session...",$_this$$.catnip.session)):($_this$$.catnip.session={},console.log("Establishing fresh session...",$_this$$.catnip.session),$_show_queue$$.push($_this$$.catnip.el.logon)));if($_map$$=$_this$$._get("#map"))$_catnip_context_pagedata$$=$_this$$._get("#catnip"),$_show_queue$$.push($_map$$),$_mapper_queue$$.push($_catnip_context_pagedata$$);$_show_queue$$.push($_this$$._get("#appfooter"));setTimeout(function(){var $element_set$$,$_i$$,$_len$$,$_results$$;console.log("Flushing UI reveal queue...",
$_show_queue$$);$_results$$=[];$_i$$=0;for($_len$$=$_show_queue$$.length;$_i$$<$_len$$;$_i$$++)$element_set$$=$_show_queue$$[$_i$$],$_results$$.push($_this$$.catnip.ui.show($element_set$$));return $_results$$},800);setTimeout(function(){var $element_set$$,$_i$$,$_len$$;console.log("Flusing mapper reveal queue...",$_mapper_queue$$);$_i$$=0;for($_len$$=$_mapper_queue$$.length;$_i$$<$_len$$;$_i$$++)$element_set$$=$_mapper_queue$$[$_i$$],$_this$$.catnip.ui.show($element_set$$);return $_this$$.catnip.idle()},
500);return $_this$$.catnip.context}}(this);this.catnip.events.onload.push(load_context);_onload=this.onload=function $this$onload$($event$$){var $callback$$,$_i$$,$_len$$,$_ref$$,$_results$$;$_ref$$=this.catnip.events.onload;$_results$$=[];$_i$$=0;for($_len$$=$_ref$$.length;$_i$$<$_len$$;$_i$$++)$callback$$=$_ref$$[$_i$$],$_results$$.push($callback$$($event$$));return $_results$$};var browse,configure,detail,draw;
configure=function $configure$(){var $config$$;$config$$={width:this.catnip.el.mapper.offsetWidth,height:this.catnip.el.mapper.offsetHeight,force:{alpha:0,strength:50,friction:0,theta:0.1,gravity:0.01,charge:0,distance:10},node:{radius:20,classes:"node"},edge:{width:2,stroke:"#999",classes:"link"},sprite:{width:60,height:60,images:{format:this.catnip.context.data.agent.capabilities.webp&&"webp"||"jpeg"}},events:{click:{warmup:0.8}}};return this.catnip.config.graph=$config$$};
detail=this.detail=this.catnip.graph.detail=function $this$catnip$graph$detail$($node$$){console.log("Showing detail for node...",$node$$);$("#leftbar section.content").text("node: "+$node$$.node.key);if($.catnip.el.leftbar.classList.contains("collapsed"))return $.catnip.ui.expand($.catnip.el.leftbar)};browse=this.browse=this.catnip.graph.browse=function $this$catnip$graph$browse$($node$$){console.log("Browsing to origin...",$node$$);return $.apptools.api.graph.construct({origin:$node$$.node.key}).fulfill({success:function($response$$){return receive($response$$)}})};
draw=this.draw=this.catnip.graph.draw=function($_this$$0$$){return function($_graph$$){var $config$$,$force$$,$_load$$,$_resize$$;if(null==$_this$$0$$.catnip.graph.active)return $_this$$0$$.catnip.config.graph=configure(),$_this$$0$$.catnip.graph.active=$_graph$$,$config$$=$_this$$0$$.catnip.config.graph,$_this$$0$$.d3.scale.category20(),$force$$=$_this$$0$$.catnip.graph.force=$_this$$0$$.d3.layout.force().linkDistance($config$$.force.distance).linkStrength($config$$.force.strength).friction($config$$.force.friction).charge($config$$.force.charge).theta($config$$.force.theta).gravity($config$$.force.gravity).alpha($config$$.force.alpha).size([$config$$.width,
$config$$.height]),$_resize$$=function $$_resize$$$(){var $height$$,$width$$;$width$$=this.innerWidth||document.body.clientWidth||document.documentElement.clientWidth;$height$$=this.innerHeight||document.body.clientHeight||document.documentElement.clientHeight;this.catnip.graph.root.attr("width",$width$$).attr("height",$height$$);return this.catnip.graph.force.alpha($config$$.events.click.warmup).size([$width$$,$height$$])},$_load$$=function $$_load$$$($g$$){var $container$$,$edge_edge_wrap$$,$line$$,
$node$$;$node$$=this.catnip.graph.root=this.d3.select(this.map);$edge_edge_wrap$$=this.catnip.graph.edge_wrap=$node$$.selectAll(".edge").data($g$$.edges).enter();$edge_edge_wrap$$=this.catnip.graph.edge=$edge_edge_wrap$$.append("svg").attr("id",function($e$$){return"edge-"+$e$$.edge.key});$line$$=this.catnip.graph.line=$edge_edge_wrap$$.append("line").attr("stroke",$config$$.edge.stroke).attr("class",$config$$.edge.classes).style("stroke-width",$config$$.edge.width);$node$$=this.catnip.graph.node_wrap=
$node$$.selectAll(".node").data($g$$.nodes).enter();$container$$=this.catnip.graph.node_container=$node$$.append("svg").attr("id",function($n$$){return"group-"+$n$$.node.key}).attr("width",$config$$.sprite.width).attr("height",$config$$.sprite.height).on("dblclick",this.catnip.graph.browse).on("click",this.catnip.graph.detail).call($force$$.drag);$node$$=this.catnip.graph.node=$container$$.append("g").attr("width",$config$$.sprite.width).attr("height",$config$$.sprite.height);this.catnip.graph.circle=
$node$$.append("circle").attr("r",$config$$.node.radius).attr("cx",$config$$.sprite.width/2).attr("cy",$config$$.sprite.height/2).attr("class",$config$$.node.classes);this.catnip.graph.legislator_image=$node$$.append("image").filter(function($n$$){return null!=$n$$["native"].data.govtrack_id}).attr("width",$config$$.sprite.width).attr("height",$config$$.sprite.height).attr("clip-path","url(#node-circle-mask)").attr("xlink:href",function($_this$$){return function($n$$){return $_this$$.catnip.config.assets.prefix+
"warehouse/raw/govtrack/photos/"+$n$$["native"].data.govtrack_id.toString()+"-100px."+$config$$.sprite.images.format}}(this));window.onresize=$_resize$$;$force$$.on("tick",function($f$$){$line$$.attr("x1",function($d$$){return $d$$.source.object.x+$config$$.node.radius/2}).attr("y1",function($d$$){return $d$$.source.object.y+$config$$.node.radius/2}).attr("x2",function($d$$){return $d$$.target.object.x+$config$$.node.radius/2}).attr("y2",function($d$$){return $d$$.target.object.y+$config$$.node.radius/
2});return $container$$.attr("x",function($d$$){return $d$$.x-$config$$.node.radius}).attr("y",function($d$$){return $d$$.y-$config$$.node.radius})});return $force$$.nodes($g$$.nodes).links($g$$.edges).start()},console.log("Drawing graph...",$_graph$$),setTimeout(function(){return $_load$$(graph)},150);console.log("Incremental draw...",graph);return setTimeout(function(){$_this$$0$$.catnip.ui.hide($_this$$0$$.map);$_this$$0$$.catnip.el.map.textContent="";$_this$$0$$.catnip.graph.draw(graph);return setTimeout(function(){return $_this$$0$$.catnip.ui.show($_this$$0$$.map)},
250)},0)}}(this);
