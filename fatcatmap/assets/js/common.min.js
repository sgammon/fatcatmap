var busy,catnip,close,collapse,dye,expand,graph,hide,idle,index,load_context,receive,show,toggle,_get,_onload,_ref,__slice=[].slice;_get=this._get=function $this$_get$($d$$){if($d$$&&null!=$d$$.querySelector)return $d$$;if("string"===typeof $d$$)return"#"===$d$$[0]?document.getElementById($d$$.replace("#","")):document.querySelectorAll($d$$);console.log("_get was asked to retrieve:",$d$$);throw"invalid _get string";};
catnip=this.catnip={ui:{},data:{},graph:{},context:{},config:{assets:{prefix:"//deliver.fcm-static.org/"}},state:{pending:1},events:{onload:[]},el:{map:_get("#appstage"),stage:_get("#appstage"),frame:_get("#appframe"),logon:_get("#logon"),mapper:_get("#mapper"),spinner:_get("#appspinner"),leftbar:_get("#leftbar"),rightbar:_get("#rightbar"),signon_providers:_get("#signon-providers")}};
show=this.show=this.catnip.ui.show=function $this$catnip$ui$show$($d$$,$hidden_only$$){var $el$$,$element$$,$_i$$,$_len$$,$_results$$;$el$$=_get($d$$);null==$el$$.length&&($el$$=[$el$$]);$_results$$=[];$_i$$=0;for($_len$$=$el$$.length;$_i$$<$_len$$;$_i$$++)$element$$=$el$$[$_i$$],$element$$.classList.remove("hidden"),$hidden_only$$?$_results$$.push(void 0):$_results$$.push($element$$.classList.remove("transparent"));return $_results$$};
hide=this.hide=this.catnip.ui.hide=function $this$catnip$ui$hide$($d$$2_el$$){var $element$$,$_i$$,$_len$$,$_results$$;$d$$2_el$$=_get($d$$2_el$$);null==$d$$2_el$$.length&&($d$$2_el$$=[$d$$2_el$$]);$_results$$=[];$_i$$=0;for($_len$$=$d$$2_el$$.length;$_i$$<$_len$$;$_i$$++)$element$$=$d$$2_el$$[$_i$$],$_results$$.push($element$$.classList.add("transparent"));return $_results$$};
toggle=this.toggle=this.catnip.ui.toggle=function $this$catnip$ui$toggle$($d$$,$klass$$){var $el$$,$element$$,$_i$$,$_len$$,$_results$$;$el$$=_get($d$$);null==$el$$.length&&($el$$=[$el$$]);$_results$$=[];$_i$$=0;for($_len$$=$el$$.length;$_i$$<$_len$$;$_i$$++)$element$$=$el$$[$_i$$],$_results$$.push($element$$.classList.toggle($klass$$||"transparent"));return $_results$$};
dye=this.dye=this.catnip.ui.dye=function $this$catnip$ui$dye$($d$$,$color$$){var $el$$,$element$$,$_i$$,$_len$$,$_results$$;$el$$=_get($d$$);null==$el$$.length&&($el$$=[$el$$]);$_results$$=[];$_i$$=0;for($_len$$=$el$$.length;$_i$$<$_len$$;$_i$$++)$element$$=$el$$[$_i$$],$_results$$.push($element$$.style.setProperty("background-color",$color$$));return $_results$$};busy=this.busy=this.catnip.busy=function($_this$$){return function(){if(0===$_this$$.catnip.state.pending++&&$_this$$.catnip.el.spinner)return $.catnip.ui.show($_this$$.catnip.el.spinner)}}(this);
idle=this.idle=this.catnip.idle=function($_this$$){return function(){if(0===--$_this$$.catnip.state.pending&&$_this$$.catnip.el.spinner)return $.catnip.ui.hide($_this$$.catnip.el.spinner)}}(this);
expand=this.expand=this.catnip.ui.expand=function $this$catnip$ui$expand$($target$$,$state$$){var $add$$,$el$$,$element$$,$remove$$,$_i$$,$_len$$,$_results$$;null==$state$$&&($state$$=!1);$el$$=_get($target$$);null==$el$$.length&&($el$$=[$el$$]);$_results$$=[];$_i$$=0;for($_len$$=$el$$.length;$_i$$<$_len$$;$_i$$++)$element$$=$el$$[$_i$$],$element$$.classList.contains("open-small")?($remove$$="open-small",$state$$||($add$$="open-expanded")):$element$$.classList.contains("open-expanded")?($remove$$=
"open-expanded",$state$$||($add$$="open-fullscreen")):$element$$.classList.contains("collapsed")&&($remove$$="collapsed",$state$$||($add$$="open-small")),$add$$=$add$$||$state$$,$remove$$&&($element$$.classList.remove($remove$$),$element$$.classList.remove("transparent")),$_results$$.push($element$$.classList.add($add$$));return $_results$$};
collapse=this.collapse=this.catnip.ui.collapse=function $this$catnip$ui$collapse$($target$$,$state$$){var $add$$,$el$$,$element$$,$remove$$,$_i$$,$_len$$,$_results$$;null==$state$$&&($state$$=!1);$el$$=_get($target$$);null==$el$$.length&&($el$$=[$el$$]);$_results$$=[];$_i$$=0;for($_len$$=$el$$.length;$_i$$<$_len$$;$_i$$++)$element$$=$el$$[$_i$$],$element$$.classList.contains("open-small")?($remove$$="open-small",$state$$||($add$$="collapsed")):$element$$.classList.contains("open-expanded")?($remove$$=
"open-expanded",$state$$||($add$$="open-small")):$element$$.classList.contains("open-fullscreen")&&($remove$$="open-fullscreen",$state$$||($add$$="open-expanded")),$add$$=$add$$||$state$$,$remove$$&&$element$$.classList.remove($remove$$),$_results$$.push($element$$.classList.add($add$$));return $_results$$};
close=this.close=this.catnip.ui.close=function $this$catnip$ui$close$($el$$7_target$$){var $element$$,$_i$$,$_len$$,$_results$$;$el$$7_target$$=_get($el$$7_target$$);null==$el$$7_target$$.length&&($el$$7_target$$=[$el$$7_target$$]);$_results$$=[];$_i$$=0;for($_len$$=$el$$7_target$$.length;$_i$$<$_len$$;$_i$$++)$element$$=$el$$7_target$$[$_i$$],$element$$.classList.remove("open-small"),$element$$.classList.remove("open-expanded"),$element$$.classList.remove("open-fullscreen"),$element$$.classList.add("collapsed"),
$_results$$.push($element$$.classList.add("transparent"));return $_results$$};"undefined"!==typeof $&&null!==$&&$.extend({catnip:this.catnip});this.catnip.data.raw={};index=this.catnip.data.index={adjacency:{},nodes_by_key:{},edges_by_key:{},natives_by_key:{},object_natives:{}};graph=this.catnip.data.graph={nodes:[],edges:[],origin:null,natives:[]};
receive=this.catnip.data.receive=function($_this$$){return function($data$$){var $key$$,$_key_iter__len1__ref1_key_i$$,$_len$$,$_ref$$,$_i$$,$_k$$,$_len2$$;$data$$="string"===typeof $data$$?$_this$$.catnip.data.payload=JSON.parse($data$$):$_this$$.catnip.data.payload=$data$$;graph.origin=$data$$.graph.origin;$_ref$$=$data$$.data.keys;$_key_iter__len1__ref1_key_i$$=$_i$$=0;for($_len$$=$_ref$$.length;$_i$$<$_len$$;$_key_iter__len1__ref1_key_i$$=++$_i$$)$key$$=$_ref$$[$_key_iter__len1__ref1_key_i$$],
null==$_this$$.catnip.data.raw[$key$$]&&($_this$$.catnip.data.raw[$key$$]=$data$$.data.objects[$_key_iter__len1__ref1_key_i$$]);$_key_iter__len1__ref1_key_i$$=Array($data$$.graph.natives);$key$$=$_i$$=0;for($_key_iter__len1__ref1_key_i$$=$_key_iter__len1__ref1_key_i$$.length;$_i$$<$_key_iter__len1__ref1_key_i$$;$key$$=++$_i$$)$key$$=$data$$.graph.edges+1+$key$$,null==index.natives_by_key[$data$$.data.keys[$key$$]]&&(index.natives_by_key[$data$$.data.keys[$key$$]]=graph.natives.push({key:$data$$.data.keys[$key$$],
data:$data$$.data.objects[$key$$]})-1);for($_key_iter__len1__ref1_key_i$$=-1;$_key_iter__len1__ref1_key_i$$<$data$$.data.keys.length;)if($_key_iter__len1__ref1_key_i$$++,$_key_iter__len1__ref1_key_i$$<=$data$$.graph.nodes)$_i$$=$_this$$.catnip.data.index.nodes_by_key[$data$$.data.keys[$_key_iter__len1__ref1_key_i$$]]?index.nodes_by_key[$data$$.data.keys[$_key_iter__len1__ref1_key_i$$]]:index.nodes_by_key[$data$$.data.keys[$_key_iter__len1__ref1_key_i$$]]=graph.nodes.push({node:{key:$data$$.data.keys[$_key_iter__len1__ref1_key_i$$],
data:$_this$$.catnip.data.raw[$data$$.data.keys[$_key_iter__len1__ref1_key_i$$]]},"native":{key:$data$$.data.objects[$_key_iter__len1__ref1_key_i$$]["native"],data:$_this$$.catnip.data.raw[$data$$.data.objects[$_key_iter__len1__ref1_key_i$$]["native"]]}})-1;else if($_key_iter__len1__ref1_key_i$$<=$data$$.graph.edges)for(index.edges_by_key[$data$$.data.keys[$_key_iter__len1__ref1_key_i$$]]||(index.edges_by_key[$data$$.data.keys[$_key_iter__len1__ref1_key_i$$]]=[]),$_i$$=$data$$.data.objects[$_key_iter__len1__ref1_key_i$$].node,
$key$$=$_i$$[0],$_ref$$=2<=$_i$$.length?__slice.call($_i$$,1):[],$_k$$=0,$_len2$$=$_ref$$.length;$_k$$<$_len2$$;$_k$$++)$_len$$=$_ref$$[$_k$$],$_this$$.catnip.data.index.adjacency[$key$$]&&$_this$$.catnip.data.index.adjacency[$key$$][$_len$$]?$_i$$=$_this$$.catnip.data.index.adjacency[$key$$][$_len$$]:($_i$$=graph.edges.push({edge:{key:$data$$.data.keys[$_key_iter__len1__ref1_key_i$$],data:$data$$.data.objects[$_key_iter__len1__ref1_key_i$$]},"native":$_this$$.catnip.data.raw[$data$$.data.objects[$_key_iter__len1__ref1_key_i$$]["native"]],
source:index.nodes_by_key[$key$$],target:index.nodes_by_key[$_len$$]})-1,index.edges_by_key[$data$$.data.keys[$_key_iter__len1__ref1_key_i$$]].push($_i$$),null==$_this$$.catnip.data.index.adjacency[$key$$]&&($_this$$.catnip.data.index.adjacency[$key$$]={}),$_this$$.catnip.data.index.adjacency[$key$$][$_len$$]=$_i$$);return setTimeout(function(){return this.catnip.graph.draw(graph)},0)}}(this);
null!=(_ref=$.catnip.el.logon)&&_ref.addEventListener("click",function($event$$){$.catnip.ui.toggle($.catnip.el.logon,"active");return $.catnip.ui.toggle($.catnip.el.signon_providers)});$(".size-close").on("click",function($event$$){$event$$=$event$$.target.parentElement.parentElement;console.log("Closing sidebar...",$event$$);return $.catnip.ui.close($event$$)});
$(".size-expand").on("click",function($event$$3_sidebar$$){$event$$3_sidebar$$=$event$$3_sidebar$$.target.parentElement.parentElement;console.log("Expanding sidebar...",$event$$3_sidebar$$);return $.catnip.ui.expand($event$$3_sidebar$$)});$(".size-minimize").on("click",function($event$$4_sidebar$$){$event$$4_sidebar$$=$event$$4_sidebar$$.target.parentElement.parentElement;console.log("Collapsing sidebar...",$event$$4_sidebar$$);return $.catnip.ui.collapse($event$$4_sidebar$$)});
load_context=this.catnip.context.load=function($_this$$){return function($event$$,$data$$){var $_catnip_context_pagedata$$,$_map$$,$_mapper_queue$$,$_show_queue$$;$_show_queue$$=[];$_mapper_queue$$=[];$_catnip_context_pagedata$$=$_this$$.catnip.context=$data$$||JSON.parse(document.getElementById("js-context").textContent);$_this$$.catnip.context.load=load_context;console.log("Loading context...",$_catnip_context_pagedata$$);$_this$$.catnip.context.agent.capabilities.cookies=navigator.cookieEnabled;
$_this$$.catnip.context.agent.capabilities.retina=2===window.devicePixelRatio;$_this$$.catnip.context.agent.capabilities.worker=window.Worker&&!0||!1;$_this$$.catnip.context.agent.capabilities.shared_worker=window.SharedWorker&&!0||!1;$_this$$.catnip.context.agent.capabilities.service_worker=navigator.serviceWorker&&!0||!1;$_this$$.catnip.context.agent.capabilities.websocket=window.WebSocket&&!0||!1;$_this$$.catnip.context.agent.capabilities.geo=navigator.geolocation&&!0||!1;$_this$$.catnip.context.agent.capabilities.touch=
0<navigator.maxTouchPoints;$_this$$.catnip.context.agent.capabilities.history=window.history.pushState&&!0||!1;$_this$$.catnip.context.agent.capabilities.storage={local:null!=window.localStorage,session:null!=window.sessionStorage,indexed:null!=window.IDBFactory};$_this$$.catnip.context.services&&(console.log("Loading services...",$_catnip_context_pagedata$$.services),apptools.rpc.service.factory($_catnip_context_pagedata$$.services));$_this$$.catnip.context.pagedata&&($_catnip_context_pagedata$$=
$_this$$.pagedata=JSON.parse(document.getElementById("js-data").textContent),console.log("Detected stapled pagedata...",$_catnip_context_pagedata$$),$_this$$.catnip.data.receive($_catnip_context_pagedata$$));$_this$$.catnip.context.session&&($_this$$.catnip.context.session.established?($_this$$.catnip.session=$_this$$.catnip.context.session.payload,console.log("Loading existing session...",$_this$$.catnip.session)):($_this$$.catnip.session={},console.log("Establishing fresh session...",$_this$$.catnip.session),
$_show_queue$$.push($_this$$.catnip.el.logon)));if($_map$$=$_this$$._get("#map"))$_catnip_context_pagedata$$=$_this$$._get("#catnip"),$_show_queue$$.push($_map$$),$_mapper_queue$$.push($_catnip_context_pagedata$$);$_show_queue$$.push($_this$$._get("#appfooter"));setTimeout(function(){var $element_set$$,$_i$$,$_len$$,$_results$$;console.log("Flushing UI reveal queue...",$_show_queue$$);$_results$$=[];$_i$$=0;for($_len$$=$_show_queue$$.length;$_i$$<$_len$$;$_i$$++)$element_set$$=$_show_queue$$[$_i$$],
$_results$$.push($_this$$.catnip.ui.show($element_set$$));return $_results$$},800);setTimeout(function(){var $element_set$$,$_i$$,$_len$$;console.log("Flusing mapper reveal queue...",$_mapper_queue$$);$_i$$=0;for($_len$$=$_mapper_queue$$.length;$_i$$<$_len$$;$_i$$++)$element_set$$=$_mapper_queue$$[$_i$$],$_this$$.catnip.ui.show($element_set$$);return $_this$$.catnip.idle()},500);return $_this$$.catnip.context}}(this);this.catnip.events.onload.push(load_context);
_onload=this.onload=function $this$onload$($event$$){var $callback$$,$_i$$,$_len$$,$_ref1$$,$_results$$;$_ref1$$=this.catnip.events.onload;$_results$$=[];$_i$$=0;for($_len$$=$_ref1$$.length;$_i$$<$_len$$;$_i$$++)$callback$$=$_ref1$$[$_i$$],$_results$$.push($callback$$($event$$));return $_results$$};
